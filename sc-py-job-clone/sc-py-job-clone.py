import sysfrom awsglue.transforms import *from awsglue.utils import getResolvedOptionsfrom pyspark.context import SparkContextfrom awsglue.context import GlueContextfrom awsglue.job import Jobargs = getResolvedOptions(sys.argv, ["JOB_NAME"])sc = SparkContext()glueContext = GlueContext(sc)spark = glueContext.spark_sessionjob = Job(glueContext)job.init(args["JOB_NAME"], args)# Script generated for node S3 bucketS3bucket_node1 = glueContext.create_dynamic_frame.from_options(    format_options={"multiline": False},    connection_type="s3",    format="json",    connection_options={"paths": ["s3://sc-pdx-590186200215"]},    transformation_ctx="S3bucket_node1",)# Script generated for node ApplyMappingApplyMapping_node2 = ApplyMapping.apply(    frame=S3bucket_node1, mappings=[], transformation_ctx="ApplyMapping_node2")# Script generated for node S3 bucketS3bucket_node3 = glueContext.write_dynamic_frame.from_options(    frame=ApplyMapping_node2,    connection_type="s3",    format="json",    connection_options={"path": "s3://sc-pdx-590186200215", "partitionKeys": []},    transformation_ctx="S3bucket_node3",)job.commit()